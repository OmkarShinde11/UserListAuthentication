{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth.guard.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:AuthComponent,\n    canActivate:[AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../Service/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n  LoginForm:FormGroup;\n  minLength=8;\n  errorMsg='';\n  isLoginMode=false;\n  constructor(private authService:AuthService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.LoginForm=new FormGroup({\n      userEmail:new FormControl('',[Validators.required,Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]),\n      Password:new FormControl('',[Validators.required,Validators.minLength(this.minLength)])\n    })\n  }\n\n  onSubmit(){\n    console.log(this.LoginForm);\n    this.isLoginMode=true;\n    this.authService.login(this.LoginForm.value.userEmail,this.LoginForm.value.Password).subscribe(resp=>{\n        console.log('Login Responce',resp);\n        localStorage.setItem('User_token',JSON.stringify(resp));\n        this.authService.user_token.next(resp);\n      },error=>{\n        this.errorMsg=error;\n      });\n  }\n\n}\n","<main>\n<div class=\"heading\">\n  <h5>Login Form</h5>\n</div>\n<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" name=\"Email-Id\" class=\"form-control\" formControlName=\"userEmail\">\n            <div class=\"warning-message\" *ngIf=\"LoginForm.get('userEmail').invalid && LoginForm.get('userEmail').touched\">\n                <div *ngIf=\"LoginForm.get('userEmail').hasError('pattern')\">\n                    Enter an email in correct format\n                </div>\n                <div *ngIf=\"LoginForm.get('userEmail').hasError('required')\">\n                    Enter an email*\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"pwd\">Password</label>\n            <input type=\"password\" id=\"pwd\" name=\"Password\" class=\"form-control\" formControlName=\"Password\">\n            <div class=\"warning-message\" *ngIf=\"LoginForm.get('Password').invalid && LoginForm.get('Password').touched\">\n                <div *ngIf=\"LoginForm.get('Password').hasError('minlength') && LoginForm.get('Password').touched\">\n                    The Minimum password length is 8\n                </div>\n                <div *ngIf=\"LoginForm.get('Password').hasError('required')\">\n                    Please Enter a Password*\n                </div>\n            </div>\n        </div>\n        <div style=\"text-align: center;\">\n            <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!LoginForm.valid\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Login</button>\n            <!-- <button class=\"btn btn-primary\" type=\"button\"  (click)=\"switchMode()\">Switch to {{isLoginMode?'Register':'Login'}}</button> -->\n        </div>\n      </form>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Modal title</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\" *ngIf=\"errorMsg!=''\">\n            {{errorMsg}}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"errorMsg==''\">\n          You've Successfully Login\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\"data-bs-dismiss=\"modal\" routerLink=\"/user\" [disabled]=\"errorMsg!=''\">Go to UserList</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</main>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './Service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService:AuthService,private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.authService.user_token.pipe(map((user=>{\n      let auth=user?true:false;\n      if(auth){\n        return this.router.createUrlTree(['/user'])\n      }\n      return true;\n    })))\n  }\n  \n}\n"],"sourceRoot":"webpack:///"}